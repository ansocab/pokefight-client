[{"/Users/anacaballero/Desktop/wbs/PROJECTS/pokefight/pokefight-client/src/index.js":"1","/Users/anacaballero/Desktop/wbs/PROJECTS/pokefight/pokefight-client/src/reportWebVitals.js":"2","/Users/anacaballero/Desktop/wbs/PROJECTS/pokefight/pokefight-client/src/GameContext.js":"3","/Users/anacaballero/Desktop/wbs/PROJECTS/pokefight/pokefight-client/src/App.js":"4","/Users/anacaballero/Desktop/wbs/PROJECTS/pokefight/pokefight-client/src/PokemonSupDetailView.js":"5","/Users/anacaballero/Desktop/wbs/PROJECTS/pokefight/pokefight-client/src/Leaderboard.js":"6","/Users/anacaballero/Desktop/wbs/PROJECTS/pokefight/pokefight-client/src/Game.js":"7","/Users/anacaballero/Desktop/wbs/PROJECTS/pokefight/pokefight-client/src/PokemonList.js":"8","/Users/anacaballero/Desktop/wbs/PROJECTS/pokefight/pokefight-client/src/Header.js":"9","/Users/anacaballero/Desktop/wbs/PROJECTS/pokefight/pokefight-client/src/VantaFog.js":"10","/Users/anacaballero/Desktop/wbs/PROJECTS/pokefight/pokefight-client/src/PokemonCard.js":"11","/Users/anacaballero/Desktop/wbs/PROJECTS/pokefight-v2/pokefight-client/src/index.js":"12","/Users/anacaballero/Desktop/wbs/PROJECTS/pokefight-v2/pokefight-client/src/reportWebVitals.js":"13","/Users/anacaballero/Desktop/wbs/PROJECTS/pokefight-v2/pokefight-client/src/App.js":"14","/Users/anacaballero/Desktop/wbs/PROJECTS/pokefight-v2/pokefight-client/src/GameContext.js":"15","/Users/anacaballero/Desktop/wbs/PROJECTS/pokefight-v2/pokefight-client/src/Components/Leaderboard.js":"16","/Users/anacaballero/Desktop/wbs/PROJECTS/pokefight-v2/pokefight-client/src/Components/PokemonSupDetailView.js":"17","/Users/anacaballero/Desktop/wbs/PROJECTS/pokefight-v2/pokefight-client/src/Components/PokemonList.js":"18","/Users/anacaballero/Desktop/wbs/PROJECTS/pokefight-v2/pokefight-client/src/Components/PokemonCard.js":"19","/Users/anacaballero/Desktop/wbs/PROJECTS/pokefight-v2/pokefight-client/src/Components/Game.js":"20","/Users/anacaballero/Desktop/wbs/PROJECTS/pokefight-v2/pokefight-client/src/Components/Header.js":"21","/Users/anacaballero/Desktop/wbs/PROJECTS/pokefight-v2/pokefight-client/src/Components/VantaFog.js":"22","/Users/anacaballero/Desktop/wbs/PROJECTS/pokefight-v2/pokefight-client/src/Components/GameButtons.js":"23","/Users/anacaballero/Desktop/wbs/PROJECTS/pokefight-v2/pokefight-client/src/Components/ProgressBar.js":"24","/Users/anacaballero/Desktop/wbs/PROJECTS/pokefight-v2/pokefight-client/src/Components/GameTextbox.js":"25","/Users/anacaballero/Desktop/wbs/PROJECTS/pokefight-v2/pokefight-client/src/Components/Pagination.js":"26","/Users/anacaballero/Desktop/wbs/PROJECTS/pokefight-v2/pokefight-client/src/Components/PokemonGamecard.js":"27"},{"size":684,"mtime":1608038479546,"results":"28","hashOfConfig":"29"},{"size":362,"mtime":1607363754063,"results":"30","hashOfConfig":"29"},{"size":643,"mtime":1608102051480,"results":"31","hashOfConfig":"29"},{"size":978,"mtime":1608190808507,"results":"32","hashOfConfig":"29"},{"size":771,"mtime":1607494345974,"results":"33","hashOfConfig":"29"},{"size":992,"mtime":1608191241039,"results":"34","hashOfConfig":"29"},{"size":5000,"mtime":1608190952532,"results":"35","hashOfConfig":"29"},{"size":1487,"mtime":1608189046029,"results":"36","hashOfConfig":"29"},{"size":346,"mtime":1608191314742,"results":"37","hashOfConfig":"29"},{"size":605,"mtime":1607589867556,"results":"38","hashOfConfig":"29"},{"size":1844,"mtime":1607672833388,"results":"39","hashOfConfig":"29"},{"size":684,"mtime":1608376469793,"results":"40","hashOfConfig":"41"},{"size":362,"mtime":1608376469797,"results":"42","hashOfConfig":"41"},{"size":1153,"mtime":1608747527638,"results":"43","hashOfConfig":"41"},{"size":1072,"mtime":1608794524816,"results":"44","hashOfConfig":"41"},{"size":1083,"mtime":1608822672790,"results":"45","hashOfConfig":"41"},{"size":771,"mtime":1608405358569,"results":"46","hashOfConfig":"41"},{"size":2560,"mtime":1608821325173,"results":"47","hashOfConfig":"41"},{"size":1610,"mtime":1608714937860,"results":"48","hashOfConfig":"41"},{"size":10561,"mtime":1608823840698,"results":"49","hashOfConfig":"41"},{"size":558,"mtime":1608742323287,"results":"50","hashOfConfig":"41"},{"size":605,"mtime":1608405358756,"results":"51","hashOfConfig":"41"},{"size":1197,"mtime":1608731506671,"results":"52","hashOfConfig":"41"},{"size":815,"mtime":1608797866825,"results":"53","hashOfConfig":"41"},{"size":1115,"mtime":1608824126267,"results":"54","hashOfConfig":"41"},{"size":288,"mtime":1608803832443,"results":"55","hashOfConfig":"41"},{"size":3231,"mtime":1608746176983,"results":"56","hashOfConfig":"41"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"w9h9d1",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},"fub12v",{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"81"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"81"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"81"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"81"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"81"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},"/Users/anacaballero/Desktop/wbs/PROJECTS/pokefight/pokefight-client/src/index.js",[],"/Users/anacaballero/Desktop/wbs/PROJECTS/pokefight/pokefight-client/src/reportWebVitals.js",[],"/Users/anacaballero/Desktop/wbs/PROJECTS/pokefight/pokefight-client/src/GameContext.js",[],"/Users/anacaballero/Desktop/wbs/PROJECTS/pokefight/pokefight-client/src/App.js",[],"/Users/anacaballero/Desktop/wbs/PROJECTS/pokefight/pokefight-client/src/PokemonSupDetailView.js",[],"/Users/anacaballero/Desktop/wbs/PROJECTS/pokefight/pokefight-client/src/Leaderboard.js",[],"/Users/anacaballero/Desktop/wbs/PROJECTS/pokefight/pokefight-client/src/Game.js",[],"/Users/anacaballero/Desktop/wbs/PROJECTS/pokefight/pokefight-client/src/PokemonList.js",[],"/Users/anacaballero/Desktop/wbs/PROJECTS/pokefight/pokefight-client/src/Header.js",[],"/Users/anacaballero/Desktop/wbs/PROJECTS/pokefight/pokefight-client/src/VantaFog.js",[],"/Users/anacaballero/Desktop/wbs/PROJECTS/pokefight/pokefight-client/src/PokemonCard.js",[],"/Users/anacaballero/Desktop/wbs/PROJECTS/pokefight-v2/pokefight-client/src/index.js",[],["118","119"],"/Users/anacaballero/Desktop/wbs/PROJECTS/pokefight-v2/pokefight-client/src/reportWebVitals.js",[],"/Users/anacaballero/Desktop/wbs/PROJECTS/pokefight-v2/pokefight-client/src/App.js",["120"],"import React, { useEffect, useContext } from \"react\";\nimport \"./App.css\";\nimport { GameContext } from \"./GameContext\";\nimport { Switch, Route, useHistory } from \"react-router-dom\";\nimport PokemonList from \"./Components/PokemonList\";\nimport Game from \"./Components/Game\";\nimport PokemonSupDetailView from \"./Components/PokemonSupDetailView\";\nimport Header from \"./Components/Header\";\n\nimport Leaderboard from \"./Components/Leaderboard\";\n\nexport default function App() {\n  const { updateGameText, setPhase } = useContext(GameContext);\n  const history = useHistory();\n  \n  useEffect(() => {\n  return history.listen((location) => {\n    updateGameText(\"Selecting opponent...\")\n    setPhase(\"prep\")\n  })\n}, [history, updateGameText])\n\n  return (\n    <div className=\"main-wrapper\">\n      <Header />\n      <Switch>\n        <Route exact path=\"/\">\n          <PokemonList />\n        </Route>\n\n        <Route path=\"/fight/:id\">\n          <Game />\n        </Route>\n\n        <Route path=\"/leaderboard\">\n          <Leaderboard />\n        </Route>\n\n        <Route path=\"/:id/:info\">\n          <PokemonSupDetailView />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n","/Users/anacaballero/Desktop/wbs/PROJECTS/pokefight-v2/pokefight-client/src/GameContext.js",[],"/Users/anacaballero/Desktop/wbs/PROJECTS/pokefight-v2/pokefight-client/src/Components/Leaderboard.js",["121"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Leaderboard() {\n  const [leaderboard, setLeaderboard] = useState([]);\n\n  useEffect(() => {\n    fetch(`https://pokefightv2.herokuapp.com/game/leaderboard`)\n      .then((res) => res.json())\n      .then((res) => {\n        setLeaderboard(res);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  return (\n    <div className=\"leaderboard\">\n      <table>\n        <thead>\n          <tr>\n          <th></th>\n            <th>Player</th>\n            <th>Pokemon</th>\n            <th>Rounds</th>\n          </tr>\n        </thead>\n        <tbody>\n          {leaderboard.map((game, index) => (\n            <tr key={game._id}>\n              <td>{`${index+1}.`}</td>\n              <td>{game.name}</td>\n              <td>{game.pokemon}</td>\n              <td>{game.defeated_pokemon}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      {/* <Link to=\"/\" className=\"leaderboard-button-link\">\n        Start new game\n      </Link> */}\n    </div>\n  );\n}\n","/Users/anacaballero/Desktop/wbs/PROJECTS/pokefight-v2/pokefight-client/src/Components/PokemonSupDetailView.js",[],"/Users/anacaballero/Desktop/wbs/PROJECTS/pokefight-v2/pokefight-client/src/Components/PokemonList.js",["122","123"],"import React, { useState, useEffect } from \"react\";\nimport PokemonCard from \"./PokemonCard\";\nimport Pagination from \"./Pagination\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default function PokemonList() {\n  const [pokemon, setPokemon] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [totalPages, setTotalPages] = useState(0);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n\n  const getDataFromPokefighten = () => {\n    fetch(`https://pokefightv2.herokuapp.com/pokemon/page/?page=${currentPage}`)\n      .then((response) => response.json())\n      .then((response) => {\n        setTotalPages(response.total_pages);\n        setPokemon(response.pokemon_list);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  useEffect(() => {\n    getDataFromPokefighten();\n  }, [currentPage]);\n\n  useEffect(() => {\n    const getSearchResults = () => {\n      fetch(`https://pokefightv2.herokuapp.com/search/?query=${searchQuery}`)\n        .then((response) => response.json())\n        .then((response) => {\n          setPokemon(response);\n        })\n        .catch((err) => console.log(err));\n    };\n\n    if (searchQuery.length !== 0) {\n      getSearchResults();\n    }\n  }, [searchQuery]);\n\n  const handleChange = (e) => {\n    const query = e.target.value;\n    setQuery(query);\n    if (query.length > 2) {\n      setSearchQuery(query);\n    } else if (query.length === 0) {\n      getDataFromPokefighten();\n    }\n  };\n\n  const handlePageClick = (data) => {\n    setCurrentPage(data.selected + 1);\n  };\n\n  return (\n    <div>\n      <h2 className=\"card__name\">Choose your pokemon!</h2>\n      <div className=\"search-wrapper\">\n        <FontAwesomeIcon icon={faSearch} className=\"search-icon\"/>\n        <input\n          className=\"search-input-field\"\n          type=\"text\"\n          value={query}\n          onChange={handleChange}\n          placeholder=\"Pokemon name\"\n        />\n      </div>\n      {loading ? (\n        <div></div>\n      ) : (\n        <ul className=\"cardList\">\n          {pokemon.map((item) => (\n            <PokemonCard\n              id={item.id}\n              name={item.name}\n              type={item.type}\n              base={item.base}\n              origin=\"list\"\n              key={item.id}\n            />\n          ))}\n        </ul>\n      )}\n      <Pagination handlePageClick={handlePageClick} pageCount={totalPages} />\n    </div>\n  );\n}\n","/Users/anacaballero/Desktop/wbs/PROJECTS/pokefight-v2/pokefight-client/src/Components/PokemonCard.js",[],"/Users/anacaballero/Desktop/wbs/PROJECTS/pokefight-v2/pokefight-client/src/Components/Game.js",["124"],"import React, { useState, useEffect, useContext, useRef } from \"react\";\nimport { GameContext } from \"../GameContext\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport PokemonGamecard from \"./PokemonGamecard\";\nimport VantaFog from \"./VantaFog\";\nimport GameTextbox from \"./GameTextbox\";\nimport GameButtons from \"./GameButtons\";\nimport ProgressBar from \"./ProgressBar\";\n\nexport default function Game() {\n  const {\n    updateGameText,\n    setComputersChoice,\n    playersChoice,\n    computersChoice,\n    setPhase,\n  } = useContext(GameContext);\n  const [pokemonOne, setPokemonOne] = useState({});\n  const [pokemonTwo, setPokemonTwo] = useState({});\n  const [types, setTypes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [randomId, setRandomId] = useState(Math.floor(Math.random() * 809));\n  const [showButtons, setShowButtons] = useState(false);\n  const [showTextfield, setShowTextfield] = useState(true);\n  const [showGameEndButtons, setShowGameEndButtons] = useState(false);\n  const [showLeaderboardSubmit, setShowLeaderboardSubmit] = useState(false);\n  const { id } = useParams();\n  const history = useHistory();\n  const gamecardRefOne = useRef();\n  const gamecardRefTwo = useRef();\n\n  const [playersHp, setPlayersHp] = useState([]);\n  const [playersHpPercentage, setPlayersHpPercentage] = useState([100, 100]);\n  const [winCounter, setWinCounter] = useState(0);\n  let current_attacking_player = 0;\n  let current_defending_player = 1;\n  let players = [];\n  let playersDamage = [];\n  let playersDamageMessages = [];\n\n  // FETCH POKEMON (get request) AND GAME RESULT (post request)\n  const getPokemonOne = fetch(`https://pokefightv2.herokuapp.com/pokemon/${id}`)\n    .then((response) => response.json())\n    .catch((err) => console.log(err));\n\n  const getPokemonTwo = fetch(\n    `https://pokefightv2.herokuapp.com/pokemon/${randomId}`\n  )\n    .then((response) => response.json())\n    .catch((err) => console.log(err));\n\n  const getTypeData = fetch(`https://pokefightv2.herokuapp.com/type`)\n    .then((response) => response.json())\n    .catch((err) => console.log(err));\n\n  useEffect(() => {\n    setRandomId(Math.floor(Math.random() * 809));\n    Promise.all([getPokemonOne, getPokemonTwo, getTypeData]).then((values) => {\n      setPokemonOne(values[0]);\n      setPokemonTwo(values[1]);\n      setTypes(values[2]);\n      setPlayersHp([values[0].base.HP, values[1].base.HP]);\n      setPlayersHpPercentage([100, 100]);\n      setLoading(false);\n      setupGame(values[1].name.english);\n    });\n  }, [winCounter]);\n\n  const sendGameResult = (gameData) => {\n    console.log(gameData)\n    fetch(`https://pokefightv2.herokuapp.com/game/save`, {\n      method: \"POST\",\n      body: JSON.stringify(gameData),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .catch((err) => console.log(err));\n  };\n\n  //GAME LOGIC\n  if (!loading) {\n    players = [pokemonOne, pokemonTwo];\n\n    let pOneTypes = [];\n    pokemonOne.type.forEach((pOneType) => {\n      pOneTypes.push(types.find((t) => t.name === pOneType.toLowerCase()));\n    });\n\n    let pTwoTypes = [];\n    pokemonTwo.type.forEach((pTwoType) => {\n      pTwoTypes.push(types.find((t) => t.name === pTwoType.toLowerCase()));\n    });\n    playersDamage = [\n      getDamageMultiplier(pOneTypes, pokemonTwo.type),\n      getDamageMultiplier(pTwoTypes, pokemonOne.type),\n    ];\n\n    playersDamageMessages = [\n      getDamageMessage(playersDamage[0]),\n      getDamageMessage(playersDamage[1]),\n    ];\n  }\n\n  async function setupGame(pokTwoName) {\n    await pause(2500);\n    gamecardRefTwo.current.flipCard();\n    updateGameText(`${pokTwoName}!`);\n    await pause(2500);\n    updateGameText(\"FIGHT!\");\n    await pause(2500);\n    setShowTextfield(false);\n    setShowButtons(true);\n  }\n\n  function getDamageMultiplier(typesOfAttacking, typesOfDefending) {\n    let damageDegree = 0.5;\n    typesOfAttacking.forEach((atype) => {\n      typesOfDefending.forEach((dtype) => {\n        if (atype.double_damage_to.includes(dtype.toLowerCase())) {\n          damageDegree += 0.5;\n        } else if (atype.half_damage_to.includes(dtype.toLowerCase())) {\n          damageDegree -= 0.25;\n        } else if (atype.no_damage_to.includes(dtype.toLowerCase())) {\n          damageDegree -= 0.4;\n        }\n      });\n    });\n\n    if (damageDegree <= 0) {\n      damageDegree = 0.1;\n    }\n    return damageDegree;\n  }\n\n  function getDamageMessage(damageDegree) {\n    if (damageDegree < 0.5) {\n      return \"The attack was not very effective...\";\n    } else if (damageDegree > 0.5) {\n      return \"The attack was super effective!\";\n    } else {\n      return \"The attack was successful\";\n    }\n  }\n\n  function pause(secs) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => resolve(), secs);\n    });\n  }\n\n  const getSign = (number) => {\n    switch (number) {\n      case 0:\n        return \"rock\";\n      case 1:\n        return \"paper\";\n      case 2:\n        return \"scissors\";\n      default:\n        return;\n    }\n  };\n\n  const flipCards = () => {\n    gamecardRefOne.current.flipCard();\n    gamecardRefTwo.current.flipCard();\n  };\n\n  const rockPaperScissors = async (pChoice) => {\n    setPhase(\"fight\");\n    const cChoice = getSign(Math.floor(Math.random() * 3));\n    setComputersChoice(cChoice);\n\n    flipCards();\n    setShowButtons(false);\n    setShowTextfield(true);\n\n    if (pChoice === cChoice) {\n      updateGameText(\"It's a tie!\");\n      await pause(2500);\n      setShowTextfield(false);\n      setShowButtons(true);\n      flipCards();\n    } else if (\n      (pChoice === \"rock\" && cChoice === \"scissors\") ||\n      (pChoice === \"scissors\" && cChoice === \"paper\") ||\n      (pChoice === \"paper\" && cChoice === \"rock\")\n    ) {\n      current_attacking_player = 0;\n      current_defending_player = 1;\n      updateGameText(\n        `${players[current_attacking_player].name.english} is attacking...`\n      );\n      await pause(2500);\n      flipCards();\n      attack();\n    } else {\n      current_attacking_player = 1;\n      current_defending_player = 0;\n      updateGameText(\n        `${players[current_attacking_player].name.english} is attacking...`\n      );\n      await pause(2500);\n      flipCards();\n      attack();\n    }\n  };\n\n  const attack = async () => {\n    // computation and setting of attack, HP values etc.\n    setShowTextfield(true);\n    updateGameText(playersDamageMessages[current_attacking_player]);\n    let newHpDefendingPlayer;\n    let newPercentageDefendingPlayer;\n\n    if (\n      Math.floor(Math.random() * 200) <\n      players[current_attacking_player].base.Speed\n    ) {\n      newHpDefendingPlayer = Math.floor(\n        playersHp[current_defending_player] -\n          players[current_attacking_player].base.Attack *\n            playersDamage[current_attacking_player] *\n            2\n      );\n      await pause(2500);\n      updateGameText(\"It was so fast, it attacked twice!\");\n    } else {\n      newHpDefendingPlayer = Math.floor(\n        playersHp[current_defending_player] -\n          players[current_attacking_player].base.Attack *\n            playersDamage[current_attacking_player]\n      );\n    }\n\n    if (newHpDefendingPlayer < 0) {\n      newHpDefendingPlayer = 0;\n    }\n\n    setPlayersHp(\n      playersHp.map((hp, index) => [\n        index === current_defending_player ? newHpDefendingPlayer : hp,\n      ])\n    );\n\n    newPercentageDefendingPlayer =\n      (newHpDefendingPlayer / players[current_defending_player].base.HP) * 100;\n\n    setPlayersHpPercentage(\n      playersHpPercentage.map((percentage, index) => [\n        index === current_defending_player\n          ? newPercentageDefendingPlayer\n          : percentage,\n      ])\n    );\n\n    await pause(2500);\n\n    if (newHpDefendingPlayer <= 0) {\n      let gameResult = players[current_attacking_player].name.english;\n      updateGameText(`${gameResult} wins!`);\n\n      if (gameResult === pokemonOne.name.english) {\n        await pause(2500);\n        setPhase(\"prep\");\n        gamecardRefTwo.current.flipCard();\n        setWinCounter(winCounter + 1);\n        updateGameText(\"The next pokemon is...\");\n      } else {\n        updateGameText(\n          `${players[current_defending_player].name.english} looses!`\n        );\n        await pause(2500);\n        updateGameText(\"GAME OVER!\");\n        await pause(2500);\n        setShowGameEndButtons(true);\n      }\n    } else {\n      setShowTextfield(false);\n      setShowButtons(true);\n    }\n  };\n\n  const handleLeaderboardSubmission = () => {\n    setShowLeaderboardSubmit(true);\n    updateGameText(`You won ${winCounter} matches with ${pokemonOne.name.english}`)\n  }\n\n  const prepareLbData = (userName) => {\n    const gameData = {\n      name: userName,\n      pokemon: pokemonOne.name.english,\n      defeated_pokemon: winCounter,\n    };\n    sendGameResult(gameData);\n    history.push(\"/leaderboard\");\n  }\n\n\n  // RENDER\n  if (loading) {\n    return <div className=\"spinner\"></div>;\n  } else {\n    return (\n      <div className=\"game-wrapper\">\n        <VantaFog />\n        <ul className=\"cardList\">\n          <PokemonGamecard\n            id={pokemonOne.id}\n            name={pokemonOne.name}\n            type={pokemonOne.type}\n            base={pokemonOne.base}\n            ref={gamecardRefOne}\n            choice={playersChoice}\n            position=\"left\"\n            // origin=\"game\"\n          />\n          {showButtons === true && <GameButtons callback={rockPaperScissors} />}\n          {showTextfield === true && <GameTextbox showInput={showLeaderboardSubmit} handleSubmit={prepareLbData}/>}\n          <PokemonGamecard\n            id={pokemonTwo.id}\n            name={pokemonTwo.name}\n            type={pokemonTwo.type}\n            base={pokemonTwo.base}\n            ref={gamecardRefTwo}\n            choice={computersChoice}\n            position=\"right\"\n            // origin=\"game\"\n          />\n        </ul>\n        <ul className=\"status-wrapper\">\n          <ProgressBar completed={playersHpPercentage[0]} />\n          <div className=\"helper-wrapper\">\n            {showGameEndButtons ? (\n              <div className=\"game-end-btn-wrapper\">\n                <button className=\"game-end-btn\" onClick={handleLeaderboardSubmission}>{\"Submit\"}</button>\n                <button className=\"game-end-btn\" onClick={() => history.push(\"/\")}>Play again</button>\n              </div>\n            ) : (\n              <div className=\"game-textfield\">{`Pokemon defeated: ${winCounter}`}</div>\n            )}\n          </div>\n          <ProgressBar completed={playersHpPercentage[1]} />\n        </ul>\n      </div>\n    );\n  }\n}\n","/Users/anacaballero/Desktop/wbs/PROJECTS/pokefight-v2/pokefight-client/src/Components/Header.js",[],"/Users/anacaballero/Desktop/wbs/PROJECTS/pokefight-v2/pokefight-client/src/Components/VantaFog.js",[],"/Users/anacaballero/Desktop/wbs/PROJECTS/pokefight-v2/pokefight-client/src/Components/GameButtons.js",[],["125","126"],"/Users/anacaballero/Desktop/wbs/PROJECTS/pokefight-v2/pokefight-client/src/Components/ProgressBar.js",[],"/Users/anacaballero/Desktop/wbs/PROJECTS/pokefight-v2/pokefight-client/src/Components/GameTextbox.js",["127"],"import React, { useContext, useState } from \"react\";\nimport { GameContext } from \"../GameContext\";\nimport Typing from \"react-typing-animation\";\nimport \"../App.css\";\n\nexport default function GameTextbox({ showInput, handleSubmit }) {\n  const { gameText } = useContext(GameContext);\n  const [inputValue, setinputValue] = useState(\"\");\n\n  const handleChange = (e) => {\n    setinputValue(e.target.value);\n  };\n\n  const handleSubmission = (e) => {\n    e.preventDefault();\n    handleSubmit(inputValue);\n  };\n\n  return (\n    <div id=\"logger\" className=\"game-textfield\">\n      {/* <Typing hideCursor=\"true\" speed={40}> */}\n        <p>{gameText}</p>\n        {/* <Typing.Reset delay={500} />\n      </Typing> */}\n      {showInput === true && (\n        <form onSubmit={handleSubmission}>\n          <input\n            type=\"text\"\n            placeholder=\"Your name\"\n            value={inputValue}\n            onChange={handleChange}\n          />\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n      )}\n      {/* {gameText.map((str, index) => (\n        <p key={index}> {str}</p>\n      ))} */}\n    </div>\n  );\n}\n","/Users/anacaballero/Desktop/wbs/PROJECTS/pokefight-v2/pokefight-client/src/Components/Pagination.js",[],"/Users/anacaballero/Desktop/wbs/PROJECTS/pokefight-v2/pokefight-client/src/Components/PokemonGamecard.js",[],{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":21,"column":4,"nodeType":"134","endLine":21,"endColumn":29,"suggestions":"135"},{"ruleId":"136","severity":1,"message":"137","line":2,"column":10,"nodeType":"138","messageId":"139","endLine":2,"endColumn":14},{"ruleId":"136","severity":1,"message":"140","line":13,"column":19,"nodeType":"138","messageId":"139","endLine":13,"endColumn":29},{"ruleId":"132","severity":1,"message":"141","line":27,"column":6,"nodeType":"134","endLine":27,"endColumn":19,"suggestions":"142"},{"ruleId":"132","severity":1,"message":"143","line":67,"column":6,"nodeType":"134","endLine":67,"endColumn":18,"suggestions":"144"},{"ruleId":"128","replacedBy":"145"},{"ruleId":"130","replacedBy":"146"},{"ruleId":"136","severity":1,"message":"147","line":3,"column":8,"nodeType":"138","messageId":"139","endLine":3,"endColumn":14},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setPhase'. Either include it or remove the dependency array.","ArrayExpression",["150"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'setLoading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getDataFromPokefighten'. Either include it or remove the dependency array.",["151"],"React Hook useEffect has missing dependencies: 'getPokemonOne', 'getPokemonTwo', 'getTypeData', and 'setupGame'. Either include them or remove the dependency array.",["152"],["148"],["149"],"'Typing' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},"Update the dependencies array to be: [history, setPhase, updateGameText]",{"range":"159","text":"160"},"Update the dependencies array to be: [currentPage, getDataFromPokefighten]",{"range":"161","text":"162"},"Update the dependencies array to be: [getPokemonOne, getPokemonTwo, getTypeData, setupGame, winCounter]",{"range":"163","text":"164"},[701,726],"[history, setPhase, updateGameText]",[989,1002],"[currentPage, getDataFromPokefighten]",[2532,2544],"[getPokemonOne, getPokemonTwo, getTypeData, setupGame, winCounter]"]